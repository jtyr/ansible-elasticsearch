---

- name: Test distribution
  assert:
    that: >
      ansible_os_family == 'RedHat' or
      ansible_os_family == 'Debian'

- name: Create Elasticsearch YUM repo file
  yum_repository:
    name: elastic
    description: Elastic YUM repo
    baseurl: "{{ elasticsearch_yum_repo_url }}"
    gpgkey: "{{ elasticsearch_yum_repo_key }}"
    params: "{{ elasticsearch_yum_repo_params }}"
  when: >
    ansible_os_family == 'RedHat'
  tags:
    - elasticsearch_pkg

- name: Install Elasticsearch GPG key
  apt_key:
    url: "{{ elasticsearch_apt_repo_key }}"
  when: >
    ansible_os_family == 'Debian'
  tags:
    - elasticsearch_pkg
    - elasticsearch_aptrepo

- name: Create Elasticsearch APT repo file
  apt_repository:
    repo: "{{ elasticsearch_apt_repo_string }}"
  when: >
    ansible_os_family == 'Debian'
  tags:
    - elasticsearch_pkg
    - elasticsearch_aptrepo

- name: Install additional Elasticsearch packages
  package:
    name: "{{ item }}"
  with_items: "{{ elasticsearch_additional_pkgs }}"
  notify:
    - Restart Elasticsearch service
  tags:
    - elasticsearch_pkg

- name: Install Elasticsearch package
  package:
    name: "{{ elasticsearch_pkg }}"
  notify:
    - Restart Elasticsearch service
  tags:
    - elasticsearch_pkg

- name: Configure Elasticsearch
  template:
    src: elasticsearch.yml.j2
    dest: "{{ elasticsearch_config_file }}"
  notify:
    - Restart Elasticsearch service
  tags:
    - elasticsearch_config

- name: Install Elasticsearch scripts
  template:
    src: script.j2
    dest: "{{ elasticsearch_scripts_path }}/{{ item.key }}"
  with_dict: "{{ elasticsearch_scripts }}"
  notify:
    - Restart Elasticsearch service
  tags:
    - elasticsearch_config
    - elasticsearch_scripts

- name: Check installed plugins
  shell: >
    {{ elasticsearch_plugins_bin }} list 2>/dev/null
  when: >
    elasticsearch_plugins | length > 0
  register: elasticsearch_plugins_installed_results
  changed_when: false
  tags:
    - elasticsearch_plugins
    - elasticsearch_plugins_check

- name: Install plugins
  shell: >
    {{ elasticsearch_plugins_bin }} {{ elasticsearch_plugins_flags }} {{ item }}
  when: >
    elasticsearch_plugins | length > 0 and (
      elasticsearch_plugins_installed_results is not defined or
      item not in elasticsearch_plugins_installed_results.stdout_lines
    )
  with_items: "{{ elasticsearch_plugins }}"
  notify:
    - Restart Elasticsearch service
  tags:
    - elasticsearch_plugins
    - elasticsearch_plugins_install

- name: Configure Elasticsearch JVM options
  template:
    src: jvm.options.j2
    dest: "{{ elasticsearch_jvm_options_file }}"
  notify:
    - Restart Elasticsearch service
  tags:
    - elasticsearch_config
    - elasticsearch_jvm_options

- name: Configure Elasticsearch sysconfig
  template:
    src: elasticsearch.sysconfig.j2
    dest: "{{ elasticsearch_sysconfig_file }}"
  notify:
    - Restart Elasticsearch service
  when: >
    ansible_os_family == 'RedHat'
  tags:
    - elasticsearch_config
    - elasticsearch_sysconfig

- name: Enable Elasticsearch service
  service:
    name: "{{ elasticsearch_service }}"
    enabled: yes
  tags:
    - elasticsearch_service

- name: Start Elasticsearch service
  service:
    name: "{{ elasticsearch_service }}"
    state: started
  register: elasticsearch_service_started
  tags:
    - elasticsearch_service
